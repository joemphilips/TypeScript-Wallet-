/** Declaration file generated by dts-gen */

declare module 'bitcoin-core' {
  export class Client {
    constructor(...args: any[]);

    abandonTransaction(...args: any[]): void;

    abortRescan(...args: any[]): void;

    addMultiSigAddress(...args: any[]): void;

    addNode(...args: any[]): void;

    addWitnessAddress(...args: any[]): void;

    backupWallet(...args: any[]): void;

    bumpFee(...args: any[]): void;

    clearBanned(...args: any[]): void;

    combineRawTransaction(...args: any[]): void;

    command(...args: any[]): void;

    createMultiSig(...args: any[]): void;

    createRawTransaction(...args: any[]): void;

    createWitnessAddress(...args: any[]): void;

    decodeRawTransaction(...args: any[]): void;

    decodeScript(...args: any[]): void;

    disconnectNode(...args: any[]): void;

    dumpPrivKey(...args: any[]): void;

    dumpWallet(...args: any[]): void;

    encryptWallet(...args: any[]): void;

    estimateFee(...args: any[]): void;

    estimatePriority(...args: any[]): void;

    estimateSmartFee(...args: any[]): void;

    estimateSmartPriority(...args: any[]): void;

    fundRawTransaction(...args: any[]): void;

    generate(...args: any[]): void;

    generateToAddress(...args: any[]): void;

    getAccount(...args: any[]): void;

    getAccountAddress(...args: any[]): void;

    getAddedNodeInfo(...args: any[]): void;

    getAddressesByAccount(...args: any[]): void;

    getBalance(...args: any[]): void;

    getBestBlockHash(...args: any[]): void;

    getBlock(...args: any[]): void;

    getBlockByHash(...args: any[]): void;

    getBlockCount(...args: any[]): void;

    getBlockHash(...args: any[]): void;

    getBlockHeader(...args: any[]): void;

    getBlockHeadersByHash(...args: any[]): void;

    getBlockTemplate(...args: any[]): void;

    getBlockchainInfo(...args: any[]): void;

    getBlockchainInformation(...args: any[]): void;

    getChainTips(...args: any[]): void;

    getChainTxStats(...args: any[]): void;

    getConnectionCount(...args: any[]): void;

    getDifficulty(...args: any[]): void;

    getGenerate(...args: any[]): void;

    getHashesPerSec(...args: any[]): void;

    getInfo(...args: any[]): void;

    getMemoryInfo(...args: any[]): void;

    getMemoryPoolContent(...args: any[]): void;

    getMemoryPoolInformation(...args: any[]): void;

    getMempoolAncestors(...args: any[]): void;

    getMempoolDescendants(...args: any[]): void;

    getMempoolEntry(...args: any[]): void;

    getMempoolInfo(...args: any[]): void;

    getMiningInfo(...args: any[]): void;

    getNetTotals(...args: any[]): void;

    getNetworkHashPs(...args: any[]): void;

    getNetworkInfo(...args: any[]): void;

    getNewAddress(...args: any[]): void;

    getPeerInfo(...args: any[]): void;

    getRawChangeAddress(...args: any[]): void;

    getRawMempool(...args: any[]): void;

    getRawTransaction(...args: any[]): void;

    getReceivedByAccount(...args: any[]): void;

    getReceivedByAddress(...args: any[]): void;

    getTransaction(...args: any[]): void;

    getTransactionByHash(...args: any[]): void;

    getTxOut(...args: any[]): void;

    getTxOutProof(...args: any[]): void;

    getTxOutSetInfo(...args: any[]): void;

    getUnconfirmedBalance(...args: any[]): void;

    getUnspentTransactionOutputs(...args: any[]): void;

    getWalletInfo(...args: any[]): void;

    getWork(...args: any[]): void;

    help(...args: any[]): void;

    importAddress(...args: any[]): void;

    importMulti(...args: any[]): void;

    importPrivKey(...args: any[]): void;

    importPrunedFunds(...args: any[]): void;

    importPubKey(...args: any[]): void;

    importWallet(...args: any[]): void;

    keypoolRefill(...args: any[]): void;

    listAccounts(...args: any[]): void;

    listAddressGroupings(...args: any[]): void;

    listBanned(...args: any[]): void;

    listLockUnspent(...args: any[]): void;

    listReceivedByAccount(...args: any[]): void;

    listReceivedByAddress(...args: any[]): void;

    listSinceBlock(...args: any[]): void;

    listTransactions(...args: any[]): void;

    listUnspent(...args: any[]): void;

    listWallets(...args: any[]): void;

    lockUnspent(...args: any[]): void;

    move(...args: any[]): void;

    ping(...args: any[]): void;

    preciousBlock(...args: any[]): void;

    prioritiseTransaction(...args: any[]): void;

    pruneBlockchain(...args: any[]): void;

    removePrunedFunds(...args: any[]): void;

    sendFrom(...args: any[]): void;

    sendMany(...args: any[]): void;

    sendRawTransaction(...args: any[]): void;

    sendToAddress(...args: any[]): void;

    setAccount(...args: any[]): void;

    setBan(...args: any[]): void;

    setGenerate(...args: any[]): void;

    setNetworkActive(...args: any[]): void;

    setTxFee(...args: any[]): void;

    signMessage(...args: any[]): void;

    signMessageWithPrivKey(...args: any[]): void;

    signRawTransaction(...args: any[]): void;

    stop(...args: any[]): void;

    submitBlock(...args: any[]): void;

    upTime(...args: any[]): void;

    validateAddress(...args: any[]): void;

    verifyChain(...args: any[]): void;

    verifyMessage(...args: any[]): void;

    verifyTxOutProof(...args: any[]): void;

    walletLock(...args: any[]): void;

    walletPassphrase(...args: any[]): void;

    walletPassphraseChange(...args: any[]): void;
  }

  declare namespace bitcoin_core {
    namespace prototype {
      function abandonTransaction(...args: any[]): void;

      function abortRescan(...args: any[]): void;

      function addMultiSigAddress(...args: any[]): void;

      function addNode(...args: any[]): void;

      function addWitnessAddress(...args: any[]): void;

      function backupWallet(...args: any[]): void;

      function bumpFee(...args: any[]): void;

      function clearBanned(...args: any[]): void;

      function combineRawTransaction(...args: any[]): void;

      function command(...args: any[]): void;

      function createMultiSig(...args: any[]): void;

      function createRawTransaction(...args: any[]): void;

      function createWitnessAddress(...args: any[]): void;

      function decodeRawTransaction(...args: any[]): void;

      function decodeScript(...args: any[]): void;

      function disconnectNode(...args: any[]): void;

      function dumpPrivKey(...args: any[]): void;

      function dumpWallet(...args: any[]): void;

      function encryptWallet(...args: any[]): void;

      function estimateFee(...args: any[]): void;

      function estimatePriority(...args: any[]): void;

      function estimateSmartFee(...args: any[]): void;

      function estimateSmartPriority(...args: any[]): void;

      function fundRawTransaction(...args: any[]): void;

      function generate(...args: any[]): void;

      function generateToAddress(...args: any[]): void;

      function getAccount(...args: any[]): void;

      function getAccountAddress(...args: any[]): void;

      function getAddedNodeInfo(...args: any[]): void;

      function getAddressesByAccount(...args: any[]): void;

      function getBalance(...args: any[]): void;

      function getBestBlockHash(...args: any[]): void;

      function getBlock(...args: any[]): void;

      function getBlockByHash(...args: any[]): void;

      function getBlockCount(...args: any[]): void;

      function getBlockHash(...args: any[]): void;

      function getBlockHeader(...args: any[]): void;

      function getBlockHeadersByHash(...args: any[]): void;

      function getBlockTemplate(...args: any[]): void;

      function getBlockchainInfo(...args: any[]): void;

      function getBlockchainInformation(...args: any[]): void;

      function getChainTips(...args: any[]): void;

      function getChainTxStats(...args: any[]): void;

      function getConnectionCount(...args: any[]): void;

      function getDifficulty(...args: any[]): void;

      function getGenerate(...args: any[]): void;

      function getHashesPerSec(...args: any[]): void;

      function getInfo(...args: any[]): void;

      function getMemoryInfo(...args: any[]): void;

      function getMemoryPoolContent(...args: any[]): void;

      function getMemoryPoolInformation(...args: any[]): void;

      function getMempoolAncestors(...args: any[]): void;

      function getMempoolDescendants(...args: any[]): void;

      function getMempoolEntry(...args: any[]): void;

      function getMempoolInfo(...args: any[]): void;

      function getMiningInfo(...args: any[]): void;

      function getNetTotals(...args: any[]): void;

      function getNetworkHashPs(...args: any[]): void;

      function getNetworkInfo(...args: any[]): void;

      function getNewAddress(...args: any[]): void;

      function getPeerInfo(...args: any[]): void;

      function getRawChangeAddress(...args: any[]): void;

      function getRawMempool(...args: any[]): void;

      function getRawTransaction(...args: any[]): void;

      function getReceivedByAccount(...args: any[]): void;

      function getReceivedByAddress(...args: any[]): void;

      function getTransaction(...args: any[]): void;

      function getTransactionByHash(...args: any[]): void;

      function getTxOut(...args: any[]): void;

      function getTxOutProof(...args: any[]): void;

      function getTxOutSetInfo(...args: any[]): void;

      function getUnconfirmedBalance(...args: any[]): void;

      function getUnspentTransactionOutputs(...args: any[]): void;

      function getWalletInfo(...args: any[]): void;

      function getWork(...args: any[]): void;

      function help(...args: any[]): void;

      function importAddress(...args: any[]): void;

      function importMulti(...args: any[]): void;

      function importPrivKey(...args: any[]): void;

      function importPrunedFunds(...args: any[]): void;

      function importPubKey(...args: any[]): void;

      function importWallet(...args: any[]): void;

      function keypoolRefill(...args: any[]): void;

      function listAccounts(...args: any[]): void;

      function listAddressGroupings(...args: any[]): void;

      function listBanned(...args: any[]): void;

      function listLockUnspent(...args: any[]): void;

      function listReceivedByAccount(...args: any[]): void;

      function listReceivedByAddress(...args: any[]): void;

      function listSinceBlock(...args: any[]): void;

      function listTransactions(...args: any[]): void;

      function listUnspent(...args: any[]): void;

      function listWallets(...args: any[]): void;

      function lockUnspent(...args: any[]): void;

      function move(...args: any[]): void;

      function ping(...args: any[]): void;

      function preciousBlock(...args: any[]): void;

      function prioritiseTransaction(...args: any[]): void;

      function pruneBlockchain(...args: any[]): void;

      function removePrunedFunds(...args: any[]): void;

      function sendFrom(...args: any[]): void;

      function sendMany(...args: any[]): void;

      function sendRawTransaction(...args: any[]): void;

      function sendToAddress(...args: any[]): void;

      function setAccount(...args: any[]): void;

      function setBan(...args: any[]): void;

      function setGenerate(...args: any[]): void;

      function setNetworkActive(...args: any[]): void;

      function setTxFee(...args: any[]): void;

      function signMessage(...args: any[]): void;

      function signMessageWithPrivKey(...args: any[]): void;

      function signRawTransaction(...args: any[]): void;

      function stop(...args: any[]): void;

      function submitBlock(...args: any[]): void;

      function upTime(...args: any[]): void;

      function validateAddress(...args: any[]): void;

      function verifyChain(...args: any[]): void;

      function verifyMessage(...args: any[]): void;

      function verifyTxOutProof(...args: any[]): void;

      function walletLock(...args: any[]): void;

      function walletPassphrase(...args: any[]): void;

      function walletPassphraseChange(...args: any[]): void;

      namespace abandonTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace abortRescan {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace addMultiSigAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace addNode {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace addWitnessAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace backupWallet {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace bumpFee {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace clearBanned {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace combineRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace createMultiSig {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace createRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace createWitnessAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace decodeRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace decodeScript {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace disconnectNode {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace dumpPrivKey {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace dumpWallet {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace encryptWallet {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace estimateFee {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace estimatePriority {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace estimateSmartFee {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace estimateSmartPriority {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace fundRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace generate {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace generateToAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getAccount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getAccountAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getAddedNodeInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getAddressesByAccount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBalance {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBestBlockHash {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBlock {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBlockCount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBlockHash {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBlockHeader {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBlockTemplate {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getBlockchainInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getChainTips {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getChainTxStats {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getConnectionCount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getDifficulty {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getGenerate {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getHashesPerSec {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getMemoryInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getMempoolAncestors {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getMempoolDescendants {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getMempoolEntry {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getMempoolInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getMiningInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getNetTotals {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getNetworkHashPs {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getNetworkInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getNewAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getPeerInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getRawChangeAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getRawMempool {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getReceivedByAccount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getReceivedByAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getTxOut {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getTxOutProof {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getTxOutSetInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getUnconfirmedBalance {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getWalletInfo {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace getWork {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace help {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace importAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace importMulti {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace importPrivKey {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace importPrunedFunds {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace importPubKey {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace importWallet {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace keypoolRefill {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listAccounts {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listAddressGroupings {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listBanned {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listLockUnspent {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listReceivedByAccount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listReceivedByAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listSinceBlock {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listTransactions {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listUnspent {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace listWallets {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace lockUnspent {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace move {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace ping {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace preciousBlock {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace prioritiseTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace pruneBlockchain {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace removePrunedFunds {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace sendFrom {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace sendMany {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace sendRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace sendToAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace setAccount {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace setBan {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace setGenerate {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace setNetworkActive {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace setTxFee {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace signMessage {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace signMessageWithPrivKey {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace signRawTransaction {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace stop {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace submitBlock {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace upTime {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace validateAddress {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace verifyChain {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace verifyMessage {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace verifyTxOutProof {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace walletLock {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace walletPassphrase {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }

      namespace walletPassphraseChange {
        const prototype: {};

        function toString(): any;

        namespace toString {
          const prototype: {};
        }
      }
    }
  }
}
